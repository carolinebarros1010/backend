rules_version = '2';
service cloud.firestore {
  match /databases/{db}/documents {
    function isSignedIn() { return request.auth != null; }
    function isOwner(uid) { return isSignedIn() && request.auth.uid == uid; }
    function isRole(role) { return isSignedIn() && role in request.auth.token.roles; }

    match /users/{uid} {
      allow read, update: if isOwner(uid);
      allow create: if isSignedIn();
      allow delete: if false;
    }

    match /athletes/{uid} {
      allow read, write: if isOwner(uid) || isRole("coach") || isRole("admin");
    }

    match /plans/{planId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isRole("coach") || isRole("admin");
    }

    match /sessions/{sid} {
      allow read: if isSignedIn();
      allow create, update: if isSignedIn() && request.resource.data.ownerUid == request.auth.uid;
      allow delete: if isRole("coach") || isRole("admin");
    }

    match /payments/{pid} {
      allow read: if isRole("admin");
      // write operations should only happen via server-side functions.
      allow write: if request.time < timestamp.date(1970,1,1);
    }
  }
}